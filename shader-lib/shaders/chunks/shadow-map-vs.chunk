precision highp float;
#include <input-standard>
#include <cc-global>
#include <cc-local-batch> 

layout(binding = 0) uniform SL_LIT_SHADOW {
  highp mat4 sl_litShadowMatViewProj; // view matrix
  highp vec4 sl_litShadowParams; // near, far, depth bias
};

out float v_depth;

#if USE_ALBEDO_MAP
in vec2 a_texCoord;
out vec2 vTexCoord;
#endif

vec4 vert () {
  StandardVertInput In;
  CCVertInput(In);

  mat4 matWorld, matWorldIT;
  CCGetWorldMatrixFull(matWorld, matWorldIT);

  vec4 pos = sl_litShadowMatViewProj * matWorld * In.position;
  #if USE_FLOAT_TEXTURE
    v_depth = pos.z;
  #else
    v_depth = pos.z / 10000.;
  #endif

  #if USE_ALBEDO_MAP
  vTexCoord = a_texCoord;
  #endif

  return pos;
}
